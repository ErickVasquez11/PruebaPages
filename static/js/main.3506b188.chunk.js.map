{"version":3,"sources":["Services/UserServices.js","Contexts/Context.js","Pages/Login/Login.jsx","Components/PrivateRoute/PrivateRoute.js","Pages/Home/Home.jsx","Components/CommentContainer.jsx","Components/CardUser.jsx","Components/PostContainerUser.jsx","Pages/UserMainPage/UserMainPage.jsx","Components/Card.jsx","Components/PostContainer.jsx","Components/PostForm/PostFrm.js","Pages/AdminMainPage/AdminMainPage.jsx","Pages/UserFavorites/UserFavoritePage.jsx","Pages/Error404/Error.jsx","App.js","reportWebVitals.js","index.js"],"names":["BASE_URL","Services","loginAdmin","User","Pass","a","fetch","method","headers","body","JSON","stringify","username","password","Response","ok","json","Token","verifyToken","token","response","data","createPost","role","Title","Description","Imagen","Authorization","title","description","image","console","log","Owned","limit","page","Toggle","id","Update","Commet","text","GetAll","Like","AddFavorite","GetFavorite","UserContext","React","createContext","TOKEN_KEY","Provider","props","useState","undefined","setToken","setUser","GetAllTokens","localStorage","setItem","useEffect","VerifyToken","TheToken","getToken","LOgin","useCallback","login","status","tokenQ","error","Exit","value","useMemo","user","useUserContext","contexts","useContext","Error","getItem","routes","Login","navigate","useNavigate","setError","setUsername","setPassword","onChange","e","save","target","onClickHandler","preventDefault","toast","logged","onSubmit","className","position","autoClose","hideProgressBar","newestOnTop","closeOnClick","rtl","pauseOnFocusLoss","draggable","pauseOnHover","htmlFor","type","placeholder","Private","children","replace","to","Home","onClick","CommentCardContainer","CardUser","likes","length","setLikes","comments","commentState","setCommentState","getUsernamer","some","it","liked","setLiked","src","alt","Date","createdAt","toLocaleDateString","map","item","PostContainerUser","pages","setPages","posts","setPosts","getPosts","nextPage","previusPage","_id","isOwnedPage","href","class","Card","getUsername","PostContainer","PostFrm","action","Admin","path","element","UserFavorite","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3506b188.chunk.js","sourcesContent":["const BASE_URL = \"https://posts-pw2021.herokuapp.com/api/v1\"/* La URL Base para no repetirla siempre */\r\n\r\nconst Services = {};/* nuestro arreglo de funciones poder llamarlas */\r\n\r\n/* Services.{Algo} es para guardar la funcion en Services */\r\n/* Todos los metodos tienen un TryCatch ahora o luego cuando se utilicen*/\r\n\r\n//Es el unico que no necesita token\r\nServices.loginAdmin = async (User, Pass) => {/* Login, necesita usuario y contraseña */\r\n\r\n    const Response = await fetch(`${BASE_URL}/auth/signin`, {\r\n        method: \"POST\",/* Medodo a utilizar */\r\n        headers: {\r\n            \"Content-type\": \"application/json\"\r\n        },\r\n        body: JSON.stringify({/* Para convertir a string nuestros datos */\r\n            username: `${User}`,\r\n            password: `${Pass}`\r\n        })\r\n    })\r\n    if (Response.ok) {/* La respuesta esta bien */\r\n        const Token = await Response.json()\r\n        return Token\r\n    }\r\n    return {};/* No esta bien la respuesta no nos da nada */\r\n}\r\n\r\n//Verificar nuestro token, de nuestro usuario\r\nServices.verifyToken = async (token) => {\r\n    const response = await fetch(`${BASE_URL}/auth/whoami`, {\r\n        method: \"GET\",\r\n        headers: {\r\n            \"Authorization\": `Bearer ${token}`\r\n        }\r\n    });\r\n    if (response.ok) {\r\n        const data = await response.json();\r\n        return data;\r\n    }\r\n    return {};\r\n}\r\n\r\n//Pasamos a las que necesitan role de ADMIN\r\nServices.createPost = async (Token, role, Title, Description, Imagen) => {/* Create post con sus parametros */\r\n    try {                                                                  /* y role para verificar */\r\n        if (role === \"admin\") {\r\n            const Response = await fetch(`${BASE_URL}/post/create`, {\r\n                method: \"POST\",\r\n                headers: {\r\n                    Authorization: `Bearer ${Token}`,\r\n                    \"Content-type\": \"application/json\"\r\n                },\r\n                body: JSON.stringify({\r\n                    title: `${Title}`,\r\n                    description: `${Description}`,\r\n                    image: `${Imagen}`,\r\n                })\r\n            })\r\n            const data = await Response.json()\r\n            console.log(data)\r\n            return data\r\n        }\r\n    } catch (error) {/* Si nos da error */\r\n        console.log(error)\r\n    }\r\n}\r\n\r\nServices.Owned = async (Token, role, limit, page) => {/* Funcion para verificar nuestros POST */\r\n    try {\r\n        if (role === \"admin\") {\r\n            const Response = await fetch(`${BASE_URL}/post/owned?limit=${limit}&page=${page}`, {\r\n                method: \"GET\",\r\n                headers: {\r\n                    Authorization: `Bearer ${Token}`,\r\n                }\r\n            })\r\n            const data = await Response.json()\r\n            console.log(data)\r\n            return data\r\n        }\r\n    } catch (error) {\r\n        console.log(error)\r\n    }\r\n}\r\n\r\nServices.Toggle = async (Token, role, id) => {/* Funcion para activar o desactivar posts */\r\n    try {\r\n        if (role === \"admin\") {\r\n            const Response = await fetch(`${BASE_URL}/post/toggle/${id}`, {\r\n                method: \"PATCH\",\r\n                headers: {\r\n                    Authorization: `Bearer ${Token}`,\r\n                }\r\n            })\r\n            const data = await Response.json()\r\n            console.log(data)\r\n            return data\r\n        }\r\n    } catch (error) {\r\n        console.log()\r\n    }\r\n}\r\n\r\nServices.Update = async (Token, role, id, Title = \"\", Description = \"\", Imagen = \"\") => {\r\n    try {                       /* Funcion Update obtienen un post y sus parametros en \"nulo\" por defecto */\r\n        if (role === \"admin\") {\r\n            const Response = await fetch(`${BASE_URL}/post/update/${id}`, {\r\n                method: \"PUT\",\r\n                headers: {\r\n                    Authorization: `Bearer ${Token}`,\r\n                    \"Content-type\": \"application/json\"\r\n                },\r\n                body: JSON.stringify({\r\n                    title: `${Title}`,\r\n                    description: `${Description}`,\r\n                    image: `${Imagen}`,\r\n                })\r\n            })\r\n            const data = await Response.json()\r\n            console.log(data)\r\n            return data\r\n\r\n        }\r\n    } catch (error) {\r\n        console.log(error)\r\n    }\r\n}\r\n\r\n//servicios sin admin (pueden hacerse con usuario)\r\n\r\nServices.Commet = async (Token, id, text) => {/* Comment que revice el ID y nuestro texto de comentario */\r\n    try {\r\n        if (text = \"\") {\r\n            return {} /* retorna nada si no hay comentario y no se agrega */\r\n        }else{\r\n        const Response = await fetch(`${BASE_URL}/post/comment/${id}`, {\r\n            method: \"PATCH\",\r\n            headers: {\r\n                Authorization: `Bearer ${Token}`,\r\n                \"Content-type\": \"application/json\"\r\n            },\r\n            body: JSON.stringify({\r\n                description: `${text}`,\r\n            })\r\n        })\r\n        const data = await Response.json()\r\n        console.log(data)\r\n        return data\r\n    }\r\n    } catch (error) {\r\n        console.log()\r\n    }\r\n}\r\n\r\nServices.GetAll = async (token, limit, page) => {/* Obtener todos con sus Props Limit y page, para poder luego hacer el InfiniteScroll */\r\n    try {\r\n        const Response = await fetch(`${BASE_URL}/post/all?limit=${limit}&page=${page}`, {\r\n            method: \"GET\",\r\n            headers: {\r\n                Authorization: `Bearer ${token}`,\r\n            }\r\n        })\r\n        const data = await Response.json()\r\n        console.log(data)\r\n        return data\r\n    } catch (error) {\r\n        console.log(error)\r\n    }\r\n}\r\n\r\nServices.Like = async (Token, id) => {/* Funcion Dar y Quitar like */\r\n    try {\r\n        const Response = await fetch(`${BASE_URL}/post/like/${id}`, {\r\n            method: \"PATCH\",\r\n            headers: {\r\n                Authorization: `Bearer ${Token}`,\r\n            }\r\n        })\r\n        const data = await Response.json()\r\n        return data\r\n    } catch (error) {\r\n        console.log()\r\n    }\r\n}\r\n\r\n/* Agrengando parte para los favoritos */\r\n\r\n/* Agregando favorito */\r\nServices.AddFavorite = async(Token,id) =>{\r\n    try {\r\n        const Response = await fetch(`${BASE_URL}/post/fav/${id}`, {\r\n            method: \"PATCH\",\r\n            headers: {\r\n                Authorization: `Bearer ${Token}`,\r\n            }\r\n        })\r\n        const data = await Response.json()\r\n        console.log(data)\r\n        return data\r\n    } catch (error) {\r\n        console.log()\r\n    }\r\n}\r\n/* Obteniendo todos los favoritos */\r\nServices.GetFavorite = async(token) =>{\r\n    try {\r\n        const Response = await fetch(`${BASE_URL}/post/fav`, {\r\n            method: \"GET\",\r\n            headers: {\r\n                Authorization: `Bearer ${token}`,\r\n            }\r\n        })\r\n        const data = await Response.json()\r\n        console.log(data)\r\n        return data\r\n    } catch (error) {\r\n        console.log(error)\r\n    }\r\n}\r\n\r\n\r\nexport default Services;/* Exportando servicios  */","import React, { useCallback, useMemo, useState, useEffect, } from \"react\";\r\nimport Services from \"../Services/UserServices\";\r\n\r\nconst UserContext = React.createContext();\r\nconst TOKEN_KEY = \"token\";\r\n\r\nexport const Provider = (props) => {\r\n    const [Token, setToken] = useState(undefined);\r\n    const [User, setUser] = useState(undefined);\r\n\r\n    const GetAllTokens = (Token) => {\r\n        localStorage.setItem(TOKEN_KEY, Token);\r\n        setToken(Token);\r\n    }\r\n\r\n    useEffect(() => {\r\n        const VerifyToken = async () => {\r\n            const TheToken = getToken();\r\n\r\n            if (TheToken) {\r\n                const { username, role } =\r\n                    await Services.verifyToken(TheToken);\r\n                if (username && role) {\r\n                    setUser({ username, role });\r\n                    GetAllTokens(TheToken);\r\n                }\r\n            }\r\n        }\r\n\r\n        VerifyToken();\r\n    }, [Token])\r\n\r\n    const LOgin = useCallback((username, password) => {\r\n        const login = async () => {\r\n            let status = false;\r\n            try {\r\n                const { token: tokenQ } = await Services.loginAdmin(username, password);\r\n                if (tokenQ) {\r\n                    GetAllTokens(tokenQ);\r\n                    status = true;\r\n                }\r\n            } catch (error) {\r\n                console.error(error);\r\n                console.error(\"Error in credentials\");\r\n            } finally {\r\n                return status;\r\n            }\r\n        };\r\n\r\n        return login();\r\n    }, [])\r\n\r\n    const Exit = useCallback(() => {\r\n        setUser(undefined);\r\n        GetAllTokens(undefined);\r\n    }, [])\r\n\r\n    const value = useMemo(() => ({\r\n        token: Token,\r\n        user: User,\r\n        login: LOgin,\r\n        Exit: Exit\r\n    }), [Token, User, LOgin, Exit]);\r\n\r\n    return <UserContext.Provider value={value} {...props} />;\r\n}\r\n\r\nexport const useUserContext = () => {\r\n    const contexts = React.useContext(UserContext);\r\n    if (!contexts) {\r\n        throw new Error(\"useUserContext() must be inside of UserProvider\");\r\n    }\r\n    return contexts;\r\n}\r\n\r\nconst getToken = () => localStorage.getItem(TOKEN_KEY);\r\n","import { useNavigate } from 'react-router-dom';\r\nimport { useEffect, useState } from \"react\";\r\nimport { useUserContext } from '../../Contexts/Context';\r\n/* llamando a Context */\r\nimport { UilKeyholeCircle } from '@iconscout/react-unicons'\r\nimport { UilUserCircle } from '@iconscout/react-unicons'\r\n//\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\nconst routes = {\r\n    \"admin\": \"/admin\",\r\n    \"user\": \"/user\"\r\n}\r\n\r\n\r\nexport default function Login() {/* Declarando funcion retornada como Login(Mayuscula la primera letra\r\n    ya que da error,si no lo esta) */\r\n\r\n    /* declarando e inicializando nuestros Usestates */\r\n    const contexts = useUserContext();\r\n    const navigate = useNavigate(); \r\n    const { login, token } = useUserContext();\r\n    const [error, setError] = useState(false);\r\n    const [username, setUsername] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    /* notificando al usuario que tiene las credenciales incorrectas */\r\n    const notify = () => toast.error(\"Usuario o contraseña incorrectos\");\r\n    const notifyEmpty = () => toast.error(\"Usuario o contraseña vacios\");\r\n\r\n    const onChange = (e, save) => {/* Para que no se recargue la pagina */\r\n        save(e.target.value);\r\n    }\r\n\r\n    const onClickHandler = async (e) => {/* Cuando damos click al boton llamar a la funcion login */\r\n        e.preventDefault();\r\n        if(username === '' || password === ''){\r\n            notifyEmpty();}\r\n        else{\r\n            const logged = await login(username, password);\r\n\r\n            setError(!logged);\r\n            setUsername(\"\");\r\n            setPassword(\"\");\r\n            \r\n            if (!logged) {\r\n                notify();\r\n            } \r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (contexts.user) {\r\n            navigate(routes[contexts.user.role] ?? \"/\");\r\n        }\r\n    }, [contexts.user]);\r\n\r\n    /*if (token) { //aqui esta el ya logueado lo redirecciona hacia otra pagina \r\n        console.log(\"Ya se loggea\")\r\n        return <Navigate replace to=\"/redirect\" />\r\n    }*/\r\n    /* (\"gp22_admin\",\"t7kCJjgNd9BGkpgE\") credenciales de nuestro grupo para pruebas*/\r\n    return(\r\n        <form onSubmit={onClickHandler} className=\"flex flex-col justify-center items-center\r\n            w-80 max-w-screen-sm mx-auto h-screen md:w-auto\">\r\n                <ToastContainer\r\n                position=\"top-center\"\r\n                autoClose={5000}\r\n                hideProgressBar={false}\r\n                newestOnTop={false}\r\n                closeOnClick\r\n                rtl={false}\r\n                pauseOnFocusLoss\r\n                draggable\r\n                pauseOnHover\r\n            />\r\n                <div className=\"space-y-5 bg-gray-700 px-20 py-20 rounded-md\">\r\n                    <div className=\"flex flex-col space-y-1\">\r\n                        <label htmlFor=\"username\" \r\n                        className=\"text-white inline-flex gap-2 text-xl font-bold items-center\">\r\n                            Usuario <UilUserCircle/>\r\n                        </label>\r\n                        <input type='text' \r\n                        value={username} \r\n                        placeholder='Ingresa tu usuario'\r\n                        onChange={(e) => onChange(e, setUsername)}\r\n                        className=\"rounded-lg py-2 px-1\"/>\r\n                    </div>\r\n                    <div className=\"flex flex-col space-y-1\" >\r\n                        <label htmlFor=\"password\" \r\n                        className=\"text-white  inline-flex  gap-2 text-xl items-center font-bold\">\r\n                            Contraseña <UilKeyholeCircle/>\r\n                        </label>\r\n                        <input type=\"password\" value={password}\r\n                        placeholder='Contraseña'\r\n                        onChange={(e) => onChange(e, setPassword)}\r\n                        className=\"rounded-lg py-2 px-1\"/>\r\n                    </div>\r\n                    <button \r\n                    className=\"bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded-lg w-full\">\r\n                        Ingresar\r\n                    </button>\r\n                </div>\r\n        </form>\r\n    );\r\n}","import { useUserContext } from './../../Contexts/Context';\r\nimport { Navigate } from 'react-router-dom';\r\n\r\nconst Private = ({ role = \"user\", children }) => {\r\n    const { token, user } = useUserContext();\r\n\r\n    if (!token) return <Navigate replace to=\"/login\" />;\r\n    if (!user || user.role !== role) return <Navigate replace to=\"/404\" />;\r\n    return children;\r\n}\r\n\r\nexport default Private;","import { Navigate } from 'react-router-dom';\r\nimport { Link } from 'react-router-dom';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nexport default function Home() {\r\n    const navigate = useNavigate();\r\n\r\n    const EnterHandler = () => {\r\n        navigate(\"/Login\");\r\n    }\r\n\r\n    return(\r\n        <div>\r\n            <button onClick= {EnterHandler}> entrar a UCA PAGES</button>\r\n        </div>\r\n    )\r\n}","import React from \"react\";\r\n\r\nconst CommentCardContainer = (props) => {\r\n    return (\r\n        <div className=\"py-2\">\r\n            <h1 className=\"font-bold text-lg text-blue-600\">{props.username}:</h1>\r\n            <p>{props.description}</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CommentCardContainer;","import React from \"react\"\r\nimport { useState } from \"react\"\r\nimport { UilSmileBeam } from '@iconscout/react-unicons'\r\nimport { UilStar } from '@iconscout/react-unicons'\r\nimport { UilCommentAltLines } from '@iconscout/react-unicons'\r\nimport Services from \"../Services/UserServices\";\r\nimport { useUserContext } from \"../Contexts/Context\";\r\nimport { useEffect } from \"react\"\r\nimport CommentCardContainer from \"./CommentContainer\"\r\n\r\n\r\n\r\nconst showMessage = () => {\r\n    alert(\"hola\");\r\n}\r\n\r\nconst likePost = () => {\r\n    alert(\"like\");\r\n}\r\n\r\nexport default function CardUser(props) {\r\n\r\n    const { login, token } = useUserContext();\r\n\r\n    const [username, setUsername] = useState(\"\");\r\n    const [likes, setLikes] = useState(props.likes.length);\r\n    const [commentState, setCommentState] = useState(props.comments);\r\n\r\n    const getUsernamer = async () => {\r\n    const response = await Services.verifyToken(token);\r\n    const username = response.username;\r\n    setUsername(username);\r\n    console.log(username);\r\n    setCommentState(props.comments);\r\n}\r\n    const [liked, setLiked] = useState(props.likes.some((it) => it.username === username));\r\n\r\n    useEffect(() => {\r\n        getUsernamer();\r\n    }, []);\r\n\r\n    async function likePost() {\r\n        await Services.Like(token, props.id);\r\n\r\n        if (!liked) {\r\n            setLikes(likes + 1);\r\n            setLiked(true);\r\n        } else {\r\n            setLikes(likes - 1);\r\n            setLiked(false);\r\n        }\r\n    }\r\n\r\n    async function addToFavorites() {\r\n        await Services.AddFavorite(token, props.id);\r\n    }\r\n\r\n    return (\r\n        <>\r\n                <div className=\"p-4 sm:w-1/2 lg:w-1/3\">\r\n                    <div className=\"h-full border-2 border-gray-200 border-opacity-60 rounded-lg overflow-hidden\">\r\n                        <img className=\"lg:h-72 md:h-48 w-full object-cover object-center\"\r\n                            src={props.image} alt=\"Post img\"/>\r\n                        <div className=\"p-6 transition duration-300 ease-in\">\r\n                            <h2 className=\"text-sm font-medium text-gray-400 mb-1\">{new Date(props.createdAt).toLocaleDateString()}</h2>\r\n                            <h1 className=\"text-2xl font-semibold mb-3\">{props.title}</h1>\r\n                            <p className=\"leading-relaxed mb-3\">{props.description}</p>\r\n                            <div className=\"flex items-center flex-wrap \">\r\n                                <a className=\"text-indigo-300 inline-flex items-center md:mb-2 lg:mb-0\">{props.username}</a>\r\n                                <span\r\n                                    className=\"text-gray-400 mr-3 inline-flex space-x-3 items-center lg:ml-auto md:ml-0 ml-auto leading-none text-sm pr-3 py-1 border-r-2 border-gray-200\">\r\n                                    <UilCommentAltLines className=\"cursor-pointer\"/>{props.comments.length}\r\n                                    <UilSmileBeam className={`cursor-pointer ${liked && 'text-yellow-400'}`} onClick={likePost}/>{props.likes.length}\r\n                                </span>\r\n                                <button className=\"text-yellow-400 inline-flex items-center leading-none text-sm cursor-pointer\">\r\n                                    <UilStar className=\"cursor-pointer\" onClick={addToFavorites}/>\r\n                                </button>\r\n                            </div>\r\n                            <div>\r\n                            <h2 className= \"text-lg font-semibold text-center text-gray-400 mt-4\">Comentarios</h2>\r\n                            {\r\n                                props.comments && commentState.map((item) => {\r\n                                    return <CommentCardContainer key={item.id} username={item.user.username} description={item.description}/>\r\n                                })\r\n                            }\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n        </>\r\n    )}\r\n\r\n","import Services from \"../Services/UserServices\";\r\nimport React, { useEffect, useState } from 'react';\r\nimport CardUser from \"./CardUser\";\r\nimport { useUserContext } from '../Contexts/Context';\r\n\r\n\r\nconst PostContainerUser = () => {\r\n    const [pages, setPages] = useState(0);\r\n    const [posts, setPosts] = useState([]);\r\n    const { login, token } = useUserContext();\r\n\r\n    useEffect(() => {\r\n        getPosts();\r\n    }, []);\r\n\r\n    const nextPage = async () => {\r\n        const newPages = pages + 1;\r\n        setPages(newPages);\r\n        await getPosts();\r\n    }\r\n\r\n    const previusPage = async () => {\r\n        const newPages = pages - 1;\r\n        setPages(newPages);\r\n        await getPosts();\r\n    }\r\n\r\n    const getPosts = async () => {\r\n        let response = await Services.GetAll(token, 6, pages)\r\n        let data =  response.data;\r\n        setPosts(data);\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className=\"flex flex-wrap\">\r\n        {posts.map((data)=>{\r\n            return <CardUser createdAt={data.createdAt} key={data._id} id={data._id} title={data.title} username={data.user.username} description={data.description} image={data.image} likes={data.likes} comments={data.comments} isOwnedPage={false} />\r\n            })}\r\n        </div>\r\n        <div className=\"flex justify-center space-x-5 mb-3\">\r\n            <button className=\"bg-blue-300 p-3 rounded\" onClick={previusPage}>Anterior</button>\r\n            <button className=\"bg-red-300 p-3 rounded\" onClick={nextPage}>Siguiente</button>\r\n        </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default PostContainerUser;","import { Route, Routes } from \"react-router-dom\";\r\nimport { useUserContext } from '../../Contexts/Context';\r\nimport { useNavigate } from \"react-router\";\r\nimport  PrivateRoute from '../../Components/PrivateRoute/PrivateRoute';\r\n import { useEffect } from \"react\";\r\nimport { handleBreakpoints } from \"@mui/system\";\r\nimport PostContainerUser from \"../../Components/PostContainerUser\";\r\n\r\n\r\n\r\n  export default function User() {\r\n    const navigate = useNavigate()\r\n    const { Exit } = useUserContext()\r\n    const { login, token } = useUserContext();\r\n\r\n  const EnterHandler = () => {\r\n    Exit()\r\n    navigate(\"/user\")\r\n}\r\n\r\nconst EnterFavorite = () => {\r\n    navigate(\"/userfavorite\")\r\n}\r\n\r\nconst LogoutHandler = () => {\r\n    Exit()\r\n    navigate(\"/Login\")\r\n}\r\n\r\n\r\n\r\n  return (\r\n    <>\r\n      <section className=\"relative w-full px-8 text-white bg-gray-800 body-font\">\r\n        <div className=\"container flex flex-col flex-wrap items-center justify-between py-5 mx-auto md:flex-row max-w-7xl\">\r\n          <a href=\"#_\" className=\"relative z-10 flex items-center w-auto text-2xl font-extrabold leading-none select-none\">UCA pages</a>\r\n            <nav onClick={EnterFavorite} className=\"top-0 left-0 z-0 cursor-pointer flex items-center justify-center w-full h-full py-5 -ml-0 space-x-5 text-base md:-ml-5 md:py-0 md:absolute\">\r\n              <a className=\"relative font-medium leading-6 p-5 rounded-lg hover:bg-gray-400 cursor-pointer transition duration-150 ease-out \">\r\n                  <span className=\"block\">Home</span>\r\n                    <span className=\"absolute bottom-0 left-0 inline-block w-full h-0.5 -mb-1 overflow-hidden\">\r\n                            <span x-show=\"hover\" className=\"absolute inset-0 inline-block w-full h-1 h-full transform \"></span>\r\n                        </span>\r\n                    </a>\r\n                    <a className=\"relative font-medium leading-6 p-5 rounded-lg hover:bg-gray-400 transition duration-150 ease-out \" x-data=\"{ hover: false }\">\r\n                        <span className=\"block\">Favorites</span>\r\n                        <span className=\"absolute bottom-0 left-0 inline-block w-full h-0.5 -mb-1 overflow-hidden\">\r\n                            <span x-show=\"hover\" className=\"absolute inset-0 inline-block w-full h-1 h-full transform \"></span>\r\n                        </span>\r\n                    </a>\r\n                    <a className=\"relative font-medium leading-6 p-5 rounded-lg hover:bg-gray-400 transition duration-150 ease-out \" x-data=\"{ hover: false }\" >\r\n                        <span className=\"block\">Saved</span>\r\n                        <span className=\"absolute bottom-0 left-0 inline-block w-full h-0.5 -mb-1 overflow-hidden\">\r\n                            <span x-show=\"hover\" className=\"absolute inset-0 inline-block w-full h-1 h-full transform \"></span>\r\n                        </span>\r\n                    </a>\r\n                </nav>\r\n\r\n                <div class=\"relative z-10 inline-flex items-center space-x-3 md:ml-5 lg:justify-end\">\r\n                    <span class=\"inline-flex rounded-md shadow-sm\">\r\n                        <a href=\"#\" class=\"inline-flex items-center justify-center px-4 py-2 text-base font-medium leading-6 text-white whitespace-no-wrap bg-blue-600 border border-blue-700 rounded-md shadow-sm hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500\"\r\n                        onClick={LogoutHandler}>\r\n                            Logout\r\n                        </a>\r\n                    </span>\r\n                </div>\r\n            </div>\r\n    </section>\r\n    <PostContainerUser/>\r\n    </>\r\n  );\r\n\r\n}\r\n","import React from \"react\"\r\nimport { useState } from \"react\"\r\nimport { UilEditAlt } from '@iconscout/react-unicons'\r\nimport { UilSmileBeam } from '@iconscout/react-unicons'\r\nimport { UilStar } from '@iconscout/react-unicons'\r\nimport { UilAndroidPhoneSlash } from '@iconscout/react-unicons'\r\nimport { UilCommentAltLines } from '@iconscout/react-unicons'\r\nimport { useUserContext } from \"../Contexts/Context\"\r\nimport { useEffect } from \"react\"\r\nimport Services from \"../Services/UserServices\";\r\nimport CommentCardContainer from \"./CommentContainer\"\r\n\r\n\r\nexport default function Card(props) {\r\n\r\n    const { login, token } = useUserContext();\r\n\r\n    const [username, setUsername] = useState(\"\");\r\n    const [likes, setLikes] = useState(props.likes.length);\r\n    const [commentState, setCommentState] = useState(props.comments);\r\n    const [showComments, setShowComments] = useState(false);\r\n\r\n    const getUsername = async () => {\r\n    const response = await Services.verifyToken(token);\r\n    const username = response.username;\r\n    setUsername(username);\r\n    setCommentState(props.comments);\r\n    console.log(username);\r\n    console.log(commentState);\r\n}\r\n\r\n    const [liked, setLiked] = useState(props.likes.some((item) => item.username === username));\r\n\r\n\r\n    useEffect(() => {\r\n        getUsername();\r\n    }, []);\r\n\r\n    async function likePost() {\r\n        await Services.Like(token, props.id);\r\n        if (!liked) {\r\n            setLikes(likes + 1);\r\n            setLiked(true);\r\n        } else {\r\n            setLikes(likes - 1);\r\n            setLiked(false);\r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n        <>\r\n                <div className=\"p-4 sm:w-1/2 lg:w-1/3\">\r\n                    <div className=\"h-full border-2 border-gray-200 border-opacity-60 rounded-lg overflow-hidden\">\r\n                        <img className=\"lg:h-72 md:h-48 w-full object-cover object-center\"\r\n                            src={props.image} alt=\"Post img\"/>\r\n                        <div className=\"p-6 transition duration-300 ease-in\">\r\n                            <h2 className=\"text-sm font-medium text-gray-400 mb-1\">{new Date(props.createdAt).toLocaleDateString()}</h2>\r\n                            <h1 className=\"text-2xl font-semibold mb-3\">{props.title}</h1>\r\n                            <p className=\"leading-relaxed mb-3\">{props.description}</p>\r\n                            <div className=\"flex items-center flex-wrap \">\r\n                                <a className=\"text-indigo-300 inline-flex items-center md:mb-2 lg:mb-0\">{props.username}</a>\r\n                                <span className=\"text-gray-400 cursor-pointer mr-10 inline-flex items-center lg:ml-auto md:ml-0 ml-auto leading-none text-sm border-gray-200\">\r\n                                    <UilSmileBeam className={`cursor-pointer ${liked && 'text-yellow-400'}`} onClick={likePost}/>{props.likes.length}\r\n                                </span>\r\n                                <span className=\"text-gray-400 inline-flex items-center leading-none text-sm\">\r\n                                    <UilStar/>\r\n                                </span>\r\n                                <span className=\"text-gray-400 inline-flex items-center leading-none text-sm\">\r\n                                    <UilAndroidPhoneSlash/>\r\n                                </span>\r\n                                <span className=\"text-gray-400 inline-flex items-center leading-none text-sm cursor-pointer\">\r\n                                    <UilEditAlt/>\r\n                                </span>\r\n                            </div>\r\n                            <div >\r\n                            <h2 className= \"text-lg font-semibold text-center text-gray-400 mt-4\">Comentarios</h2>\r\n                            {\r\n                                props.comments && commentState.map((item) => {\r\n                                    return <CommentCardContainer key={item.id} username={item.user.username} description={item.description}/>\r\n                                })\r\n                            }\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n        </>\r\n    )}\r\n\r\n","import Services from \"../Services/UserServices\";\r\nimport React, { useEffect, useState } from 'react';\r\nimport Card from \"./Card\";\r\nimport { useUserContext } from '../Contexts/Context';\r\n\r\n\r\nconst PostContainer = () => {\r\n    const [pages, setPages] = useState(0);\r\n    const [posts, setPosts] = useState([]);\r\n    const { login, token } = useUserContext();\r\n\r\n    useEffect(() => {\r\n        getPosts();\r\n    }, []);\r\n\r\n    const nextPage = async () => {\r\n        const newPages = pages + 1;\r\n        setPages(newPages);\r\n        await getPosts();\r\n    }\r\n\r\n    const previusPage = async () => {\r\n        const newPages = pages - 1;\r\n        setPages(newPages);\r\n        await getPosts();\r\n    }\r\n\r\n    const getPosts = async () => {\r\n        let response = await Services.GetAll(token, 6, pages)\r\n        let data =  response.data;\r\n        setPosts(data);\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className=\"flex flex-wrap\">\r\n        {posts.map((data)=>{\r\n            return <Card createdAt={data.createdAt} key={data._id} id={data._id} title={data.title} username={data.user.username} description={data.description} image={data.image} likes={data.likes} comments={data.comments} isOwnedPage={false} />\r\n            })}\r\n        </div>\r\n        <div className=\"flex justify-center space-x-5 pb-5\">\r\n            <button className=\"bg-blue-300 p-3 rounded\" onClick={previusPage}>Anterior</button>\r\n            <button className=\"bg-red-300 p-3 rounded\" onClick={nextPage}>Siguiente</button>\r\n        </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default PostContainer;","import axios from 'axios';\r\nimport React from 'react';\r\nimport { CheckCircleIcon } from '@heroicons/react/solid';\r\n\r\nconst PostFrm = () => {\r\n    // eslint-disable-next-line consistent-return\r\n    async function onSubmit(e) {\r\n        e.preventDefault();\r\n\r\n        const formData = new FormData(e.target);\r\n\r\n        const body = Object.fromEntries(formData.entries());\r\n\r\n        if (body.title === '' || body.description === '') return alert('Llena el titulo y la descripcion');\r\n\r\n        const res = await axios.post('http://localhost:5500/posts/create', { ...body, active: body.active === 'on' }, {\r\n            headers: {\r\n                Authorization: `Bearer ${localStorage.getItem('token')}`,\r\n            },\r\n        });\r\n\r\n        console.log(res);\r\n    }\r\n\r\n    return (\r\n    <form>\r\n        <div class=\"w-full\">\r\n    <div class=\"max-w-5xl mx-auto px-6 sm:px-6 lg:px-8 mb-12\">\r\n        <div class=\"bg-gray-600 w-full shadow rounded p-8 sm:p-12 -mt-72\">\r\n            <p class=\"text-3xl font-bold leading-7 text-center text-white\">Formulario Post</p>\r\n            <form action=\"\" method=\"post\">\r\n                <div class=\"md:flex items-center mt-8\">\r\n                    <div class=\"w-full  flex flex-col\">\r\n                        <label  class=\"font-semibold leading-none text-white\">Titulo</label>\r\n                        <input  class=\"placeholder-gray-500 ...\" placeholder=\"Ingrese titulo\" type=\"text\" class=\"leading-none text-gray-900 p-3 focus:outline-none focus:border-blue-700 mt-4 bg-gray-100 border rounded border-gray-200\" />\r\n                    </div>\r\n                  </div>\r\n                <div class=\"md:flex items-center mt-8\">\r\n                    <div class=\"w-full flex flex-col\">\r\n                        <label class=\"font-semibold leading-none text-white\">Imagen</label>\r\n                        <input class=\"placeholder-gray-500 ...\" placeholder=\"Ingrese URL de la imagen\" type=\"text\" class=\"leading-none text-gray-900 p-3 focus:outline-none focus:border-blue-700 mt-4 bg-gray-100 border rounded border-gray-200\"/>\r\n                    </div>\r\n                    \r\n                </div>\r\n                <div>\r\n                    <div class=\"w-full flex flex-col mt-8\">\r\n                        <label class=\"font-semibold leading-none text-white\">Descripcion</label>\r\n                        <textarea class=\"placeholder-gray-500 ...\" placeholder=\"Ingrese descripcion del post\" type=\"text\" class=\"h-40 text-base leading-none text-gray-900 p-3 focus:oultine-none focus:border-blue-700 mt-4 bg-gray-100 border rounded border-gray-200\"></textarea>\r\n                    </div>\r\n                </div>\r\n                <div class=\"flex items-center justify-center w-full\">\r\n                    <button class=\"mt-9 font-semibold leading-none text-white py-4 px-10 bg-blue-900 rounded hover:bg-blue-600 focus:ring-2 focus:ring-offset-2 focus:ring-blue-700 focus:outline-none\">\r\n                        Publicar\r\n                    </button>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    </div>\r\n</div>\r\n    </form>\r\n        \r\n    );\r\n};\r\n\r\nexport default PostFrm;","import { useNavigate } from 'react-router-dom';\r\nimport { useUserContext } from '../../Contexts/Context';\r\nimport { Route, Routes } from \"react-router-dom\";\r\nimport Services from '../../Services/UserServices';\r\nimport PostContainer from '../../Components/PostContainer';\r\nimport Context from '../../Contexts/Context';\r\nimport PostFrm from '../../Components/PostForm/PostFrm';\r\nimport Private from '../../Components/PrivateRoute/PrivateRoute';\r\n\r\nexport default function Admin() {\r\n    const navigate = useNavigate()\r\n    const { Exit } = useUserContext()\r\n    const { login, token } = useUserContext();\r\n\r\n    const EnterHandler = () => {\r\n        Exit()\r\n        navigate(\"/Login\")\r\n    }\r\n\r\n    const LogoutHandler = () => {\r\n        Exit()\r\n        navigate(\"/Login\")\r\n    }\r\n\r\n    const goToPost = () => {\r\n        navigate(\"/post\")\r\n    }\r\n\r\n    const ownPosts = () => {\r\n        navigate(\"/ownposts\")\r\n    }\r\n\r\n    const createPost = () => {\r\n        navigate(\"/createpost\")\r\n    }\r\n\r\n    /* const GetallHandler = (e) => {\r\n        e.preventDefault();\r\n        Services.Toggle(token, \"admin\", \"6193113ec0eacd88db877059\")\r\n        Services.Owned(token,\"admin\",5,0)\r\n        Services.GetAll(token,15,0)\r\n    } */\r\n    return(\r\n    <div>\r\n      {<section className=\"relative w-full px-8 text-white bg-gray-800 body-font\">\r\n        <div className=\"container flex flex-col flex-wrap items-center justify-between py-5 mx-auto md:flex-row max-w-7xl\">\r\n          <a href=\"#_\" className=\"relative z-10 flex items-center w-auto text-2xl font-extrabold leading-none select-none\">UCA pages</a>\r\n            <nav className=\"top-0 left-0 z-0 flex items-center justify-center w-full h-full py-5 -ml-0 space-x-5 text-base md:-ml-5 md:py-0 md:absolute\">\r\n              <a href=\"#_\" className=\"relative font-medium leading-6 p-5 rounded-lg hover:bg-gray-400 transition duration-150 ease-out \">\r\n                  <span className=\"block\">Home</span>\r\n                    <span className=\"absolute bottom-0 left-0 inline-block w-full h-0.5 -mb-1 overflow-hidden\">\r\n                            <span x-show=\"hover\" className=\"absolute inset-0 inline-block w-full h-1 h-full transform \"></span>\r\n                        </span>\r\n                    </a>\r\n                    <a onClick={goToPost} className=\"relative font-medium leading-6 p-5 rounded-lg hover:bg-gray-400 transition duration-150 ease-out \" x-data=\"{ hover: false }\">\r\n                        <span className=\"block\">Owned</span>\r\n                        <span className=\"absolute bottom-0 left-0 inline-block w-full h-0.5 -mb-1 overflow-hidden\">\r\n                            <span x-show=\"hover\" className=\"absolute inset-0 inline-block w-full h-1 h-full transform \"></span>\r\n                        </span>\r\n                    </a>\r\n                    <a href=\"#_\" className=\"relative font-medium leading-6 p-5 rounded-lg hover:bg-gray-400 transition duration-150 ease-out \" x-data=\"{ hover: false }\">\r\n                        <span className=\"block\">Favorites</span>\r\n                        <span className=\"absolute bottom-0 left-0 inline-block w-full h-0.5 -mb-1 overflow-hidden\">\r\n                            <span x-show=\"hover\" className=\"absolute inset-0 inline-block w-full h-1 h-full transform \"></span>\r\n                        </span>\r\n                    </a>\r\n                    <a onClick={createPost} className=\"relative font-medium leading-6 p-5 rounded-lg hover:bg-gray-400 transition duration-150 ease-out \" x-data=\"{ hover: false }\" >\r\n                        <span className=\"block\">Create Post</span>\r\n                        <span className=\"absolute bottom-0 left-0 inline-block w-full h-0.5 -mb-1 overflow-hidden\">\r\n                            <span x-show=\"hover\" className=\"absolute inset-0 inline-block w-full h-1 h-full transform \"></span>\r\n                        </span>\r\n                    </a>\r\n                </nav>\r\n\r\n                <div class=\"relative z-10 inline-flex items-center space-x-3 md:ml-5 lg:justify-end\">\r\n                    <span class=\"inline-flex rounded-md shadow-sm\">\r\n                        <a href=\"#\" class=\"inline-flex items-center justify-center px-4 py-2 text-base font-medium leading-6 text-white whitespace-no-wrap bg-blue-600 border border-blue-700 rounded-md shadow-sm hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500\"\r\n                        onClick={LogoutHandler}>\r\n                            Logout\r\n                        </a>\r\n                    </span>\r\n                </div>\r\n            </div>\r\n    </section>}\r\n    <Routes>\r\n        <Route path=\"/\" element={<PostContainer />} />\r\n        <Route\r\n          path=\"/post\"\r\n          element={\r\n            <Private>\r\n              <PostFrm />\r\n            </Private>\r\n          }\r\n        />\r\n    </Routes>\r\n    </div>\r\n  )\r\n}","import { useNavigate } from 'react-router-dom';\r\nimport Services from '../../Services/UserServices';\r\nimport { useUserContext } from '../../Contexts/Context';\r\n\r\nexport default function UserFavorite() {\r\n    const navigate = useNavigate()\r\n    const { login, token } = useUserContext();\r\n\r\n    const showFavorites = () => {\r\n        Services.GetFavorite(token)\r\n    }\r\n    showFavorites();\r\n    const EnterHandler = () => {\r\n        navigate(\"/user\")\r\n    }\r\n\r\n    const HomeHandler = () => {\r\n        navigate(\"/user\")\r\n    }\r\n\r\n    const LogoutHandler = () => {\r\n        navigate(\"/Login\")\r\n    }\r\n\r\n    return(\r\n        <>\r\n            <section className=\"relative w-full px-8 text-white bg-gray-800 body-font\">\r\n        <div className=\"container flex flex-col flex-wrap items-center justify-between py-5 mx-auto md:flex-row max-w-7xl\">\r\n          <a href=\"#_\" className=\"relative z-10 flex items-center w-auto text-2xl font-extrabold leading-none select-none\">UCA pages</a>\r\n            <nav onClick={HomeHandler} className=\"top-0 left-0 z-0 cursor-pointer flex items-center justify-center w-full h-full py-5 -ml-0 space-x-5 text-base md:-ml-5 md:py-0 md:absolute\">\r\n              <a className=\"relative font-medium leading-6 p-5 rounded-lg hover:bg-gray-400 cursor-pointer transition duration-150 ease-out \">\r\n                  <span className=\"block\">Home</span>\r\n                    <span className=\"absolute bottom-0 left-0 inline-block w-full h-0.5 -mb-1 overflow-hidden\">\r\n                            <span x-show=\"hover\" className=\"absolute inset-0 inline-block w-full h-1 h-full transform \"></span>\r\n                        </span>\r\n                    </a>\r\n                    <a className=\"relative font-medium leading-6 p-5 rounded-lg hover:bg-gray-400 transition duration-150 ease-out \" x-data=\"{ hover: false }\">\r\n                        <span className=\"block\">Favorites</span>\r\n                        <span className=\"absolute bottom-0 left-0 inline-block w-full h-0.5 -mb-1 overflow-hidden\">\r\n                            <span x-show=\"hover\" className=\"absolute inset-0 inline-block w-full h-1 h-full transform \"></span>\r\n                        </span>\r\n                    </a>\r\n                    <a className=\"relative font-medium leading-6 p-5 rounded-lg hover:bg-gray-400 transition duration-150 ease-out \" x-data=\"{ hover: false }\" >\r\n                        <span className=\"block\">Saved</span>\r\n                        <span className=\"absolute bottom-0 left-0 inline-block w-full h-0.5 -mb-1 overflow-hidden\">\r\n                            <span x-show=\"hover\" className=\"absolute inset-0 inline-block w-full h-1 h-full transform \"></span>\r\n                        </span>\r\n                    </a>\r\n                </nav>\r\n\r\n                <div class=\"relative z-10 inline-flex items-center space-x-3 md:ml-5 lg:justify-end\">\r\n                    <span class=\"inline-flex rounded-md shadow-sm\">\r\n                        <a href=\"#\" class=\"inline-flex items-center justify-center px-4 py-2 text-base font-medium leading-6 text-white whitespace-no-wrap bg-blue-600 border border-blue-700 rounded-md shadow-sm hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500\"\r\n                        onClick={LogoutHandler}>\r\n                            Logout\r\n                        </a>\r\n                    </span>\r\n                </div>\r\n            </div>\r\n    </section>\r\n        </>\r\n    )\r\n}","export default function Error() {\r\n\r\n    return(\r\n        <div>\r\n            <image src=\"https://i.pinimg.com/originals/07/9c/3e/079c3ea0dce59cc171629800294b0f3d.jpg\" \r\n            alt=\"err 404\"/>\r\n            <h1>Error 404</h1>\r\n            <p>Something went wrong, try: </p>\r\n            <button>Go to login</button>\r\n        </div>\r\n    )\r\n}","import Login from './Pages/Login/Login';\r\nimport Private from './Components/PrivateRoute/PrivateRoute'\r\nimport Home from './Pages/Home/Home';\r\nimport User from './Pages/UserMainPage/UserMainPage';\r\nimport Admin from './Pages/AdminMainPage/AdminMainPage';\r\nimport UserFavorite from './Pages/UserFavorites/UserFavoritePage';\r\nimport Error from './Pages/Error404/Error';\r\n\r\nimport { BrowserRouter, Routes, Route, Navigate } from \"react-router-dom\";\r\n\r\nfunction App() {\r\n  //funciones ya listas\r\n  /*  \r\n  const { token , role } = await login(\"gp22_admin\",\"t7kCJjgNd9BGkpgE\")\r\n  //llamar al login \r\n  login(\"gp22_admin\",\"t7kCJjgNd9BGkpgE\")\r\n\r\n  // llamar a create post admin only\r\n  createPost(token, role, \"asdasdasdasd\",\"asdasdasdasda\",\"asdasdasdasd\")\r\n\r\n  //llamar a owned admin only\r\n  aOwned(token,role, 15, 0)\r\n\r\n  //llamar a toggle admin only\r\n  Toggle(token, role, \"6193113ec0eacd88db877059\")\r\n\r\n  //lammar a getall\r\n  GetAll(token, 15,0)\r\n\r\n  //llamar a like\r\n  Like(token, \"6193113ec0eacd88db877059\")\r\n\r\n\r\n  //llamar a comentario\r\n  Commet (token,\"6193113ec0eacd88db877059\",\"increiasdasdble post wow\")\r\n\r\n  //llamar a update\r\n  Update(token ,role,\"6193113ec0eacd88db877059\",\"la mejor descrion de los post\",\"asdasasdasda\",\"asdasdasda\")\r\n\r\n  GetFavorite(token)\r\n  AddFavorite(token)\r\n  */\r\n  \r\n  return (\r\n\r\n    <BrowserRouter>\r\n      <Routes>\r\n        <Route path=\"/\" element={<Home />} />\r\n        <Route path=\"/Login\" element={<Login />} />\r\n        <Route path=\"/*\" element={<Error />} />\r\n\r\n        <Route path=\"/admin\" element={<Private role=\"admin\"> <Admin/></Private>}/>\r\n        <Route path=\"/user\" element={<Private role=\"user\"> <User/></Private>}/>\r\n        <Route path=\"/userfavorite\" element={<Private role=\"user\"> <UserFavorite/></Private>}/>\r\n      </Routes>\r\n    </BrowserRouter>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport { Provider } from './Contexts/Context';\r\n\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}